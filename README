(THIS IS INCOMPLETE)

This is the code that runs http://suggestify.appspot.com/

--

SOME THINGS WE TAKE FOR GRANTED:

* The suggestor is not actually notified when a suggestion is approved or
  rejected.

  So far, the site relies on both the suggestor and the photographer knowing
  about a suggestion. I've given some thought to allowing the site to post
  comments (on a photographer's page) on behalf of a suggestor saying that
  there's a pending suggestion. This has the potential to be spamtastic so I
  haven't done it yet.

--

THINGS THAT STILL NEED TO BE DONE:

* Pagination, anywhere and everywhere. This includes the ribbon/carousel which
  isn't smart enough to fetch new photos when it reaches the end of the list.

* Removing photos from the ribbon when they are selected for a suggestion.

* Keeping a local store of photos that are known to have been suggested and are
  pending approval for filtering the list of photos that come back in searches,
  etc.

* Keeping a local store of photos that are known to be geotagged for filtering
  the list of photos that come back in searches, etc.

* "Corrections" support for the reverse geocoding.

* The "show me on a map" modal dialog is truly awful (on the review suggestions
  page) . At a minimum the positioning should be made to work with page
  scrolling. 

* The ability to query for anything other than a single user, like tags.

* Likewise, the code should be able to pull in the list of contacts for a user.

* Lots of finnicky positioning/float bugs, when windows are too narrow and
  stuff. 

* If a user clicks suggest me while a location is being reverse geocoded (but
  has not returned a WOE ID) should the call to add the suggestion be deferred?

* Recognize machine tags known to infer location (Dopplr Social Atlas,
  FourSquare etc.) when trying to use tags to determine photo location.

* Lots of CSS is still inlined and needs to be tidied up and rationalized.

* Any kind of testing in IE

* Notifications via XMPP?

--

REQUIREMENTS:

If you want to run a local version of suggestify, you will need:

* A valid Flickr API key, registered as a web application. Both the API key and
  the application secret will need to be added to the config.py file.

  If you don't have a Flickr API key, you can get one here:

  http://www.flickr.com/services/api/keys/apply/

The API key and secret will need to be added to your own copy of config.py
(start with config.sample.py). 

Suggestify requires Flickr "web" auth so when you set up your API key be sure to
configure the callback URL to point to your local instance of AppEngine running
the code.

* A valid GAE account and a recent version of the GAE SDK for Python (>= 1.2.3)
  which can be downloaded from:

  http://code.google.com/appengine/downloads.html

There are two other dependencies which are not included as part of the package
itself. They are: 

* gae-FlickrApp

  http://github.com/straup/gae-flickrapp/tree/master

* gae-APIApp

  http://github.com/straup/gae-APIApp/tree/master

They will need to be installed as follows:

 me @ localhost in /home/me/www/gae-suggestify  
 101 ->ls -al 
 total 104
 drwxr-xr-x  21 asc   staff   714 Sep  7 18:20 .
 drwxr-xr-x  14 asc   staff   476 Aug 20 07:54 ..
 drwxr-xr-x  12 asc   staff   408 Sep  7 18:21 .git
 -rw-r--r--   1 asc   staff    15 May 20 09:06 .gitignore
 lrwxr-xr-x   1 root  staff    39 Jul  2 23:48 APIApp -> /home/me/python/gae-APIApp/APIApp
 lrwxr-xr-x   1 root  staff    45 Jul  2 23:48 FlickrApp -> /home/me/python/gae-FlickrApp/FlickrApp
 ...

--

GENERAL ENGINEERING/DORK NOTES

The library layout is still a bit of a mess.

This is equal parts a function of the app (still) growing organically and my
inability to ever really understand how the hell Python interprets (package)
names and imports stuff. Mostly it just makes me angry and then I am unable to
actually imagine a useful solution.
